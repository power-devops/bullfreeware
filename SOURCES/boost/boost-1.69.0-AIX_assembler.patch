--- ./libs/context/build/Jamfile.v2.ORIGIN	2020-04-17 10:06:39 -0500
+++ ./libs/context/build/Jamfile.v2	2020-04-17 10:11:03 -0500
@@ -295,9 +295,9 @@
    ;
 
 alias asm_sources
-   : asm/make_ppc32_sysv_xcoff_gas.S
-     asm/jump_ppc32_sysv_xcoff_gas.S
-     asm/ontop_ppc32_sysv_xcoff_gas.S
+   : asm/make_ppc32_sysv_xcoff_xas.S
+     asm/jump_ppc32_sysv_xcoff_xas.S
+     asm/ontop_ppc32_sysv_xcoff_xas.S
    : <abi>sysv
      <address-model>32
      <architecture>power
@@ -367,9 +367,9 @@
    ;
 
 alias asm_sources
-   : asm/make_ppc64_sysv_xcoff_gas.S
-     asm/jump_ppc64_sysv_xcoff_gas.S
-     asm/ontop_ppc64_sysv_xcoff_gas.S
+   : asm/make_ppc64_sysv_xcoff_xas.S
+     asm/jump_ppc64_sysv_xcoff_xas.S
+     asm/ontop_ppc64_sysv_xcoff_xas.S
    : <abi>sysv
      <address-model>64
      <architecture>power
--- /dev/null	2020-04-17 10:03:30 -0500
+++ ./libs/context/src/asm/jump_ppc64_sysv_xcoff_xas.S	2020-04-17 09:52:45 -0500
@@ -0,0 +1,173 @@
+/*
+            Copyright Oliver Kowalke 2009.
+   Distributed under the Boost Software License, Version 1.0.
+      (See accompanying file LICENSE_1_0.txt or copy at
+          http://www.boost.org/LICENSE_1_0.txt)
+*/
+
+/*******************************************************
+ *                                                     *
+ *  -------------------------------------------------  *
+ *  |  0  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  *
+ *  -------------------------------------------------  *
+ *  |  0  |  4  |  8  |  12 |  16 |  20 |  24 |  28 |  *
+ *  -------------------------------------------------  *
+ *  |    TOC    |    R14    |    R15    |    R16    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  8  |  9  |  10 |  11 |  12 |  13 |  14 |  15 |  *
+ *  -------------------------------------------------  *
+ *  |  32 |  36 |  40 |  44 |  48 |  52 |  56 |  60 |  *
+ *  -------------------------------------------------  *
+ *  |    R17    |    R18    |     R19   |    R20    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  16 |  17 |  18 |  19 |  20 |  21 |  22 |  23 |  *
+ *  -------------------------------------------------  *
+ *  |  64 |  68 |  72 |  76 |  80 |  84 |  88 |  92 |  *
+ *  -------------------------------------------------  *
+ *  |    R21    |    R22    |    R23    |    R24    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  24 |  25 |  26 |  27 |  28 |  29 |  30 |  31 |  *
+ *  -------------------------------------------------  *
+ *  |  96 | 100 | 104 | 108 | 112 | 116 | 120 | 124 |  *
+ *  -------------------------------------------------  *
+ *  |    R25    |    R26    |    R27    |    R28    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  32 |  33 |  34 |  35 |  36 |  37 |  38 |  39 |  *
+ *  -------------------------------------------------  *
+ *  | 128 | 132 | 136 | 140 | 144 | 148 | 152 | 156 |  *
+ *  -------------------------------------------------  *
+ *  |    R29    |    R30    |    R31    |   hidden  |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  40 |  41 |  42 |  43 |  44 |  45 |  46 |  47 |  *
+ *  -------------------------------------------------  *
+ *  | 160 | 164 | 168 | 172 | 176 | 180 | 184 | 188 |  *
+ *  -------------------------------------------------  *
+ *  |     CR    |     LR    |     PC    | back-chain|  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  48 |  49 |  50 |  51 |  52 |  53 |  54 |  55 |  *
+ *  -------------------------------------------------  *
+ *  | 192 | 196 | 200 | 204 | 208 | 212 | 216 | 220 |  *
+ *  -------------------------------------------------  *
+ *  |  cr saved |  lr saved |  compiler |   linker  |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  56 |  57 |  58 |  59 |  60 |  61 |  62 |  63 |  *
+ *  -------------------------------------------------  *
+ *  | 224 | 228 | 232 | 236 | 240 | 244 | 248 | 252 |  *
+ *  -------------------------------------------------  *
+ *  | TOC saved |    FCTX   |    DATA   |           |  *
+ *  -------------------------------------------------  *
+ *                                                     *
+ *******************************************************/
+
+.machine "any"
+.file "jump_ppc64_sysv_xcoff_aixas.S"
+.csect .text[PR]
+.toc
+.csect .text[PR]
+.globl jump_fcontext
+.globl .jump_fcontext
+.csect jump_fcontext[DS]
+jump_fcontext:
+.llong .jump_fcontext, TOC[tc0], 0
+.csect .text[PR]
+.jump_fcontext:
+    # reserve space on stack
+    subi  1, 1, 184
+
+    std  2,  0(1)  # save TOC
+    std  14, 8(1)  # save R14
+    std  15, 16(1)  # save R15
+    std  16, 24(1)  # save R16
+    std  17, 32(1)  # save R17
+    std  18, 40(1)  # save R18
+    std  19, 48(1)  # save R19
+    std  20, 56(1)  # save R20
+    std  21, 64(1)  # save R21
+    std  22, 72(1)  # save R22
+    std  23, 80(1)  # save R23
+    std  24, 88(1)  # save R24
+    std  25, 96(1)  # save R25
+    std  26, 104(1)  # save R26
+    std  27, 112(1)  # save R27
+    std  28, 120(1)  # save R28
+    std  29, 128(1)  # save R29
+    std  30, 136(1)  # save R30
+    std  31, 144(1)  # save R31
+    std  3,  152(1)  # save hidden
+
+    # save CR
+    mfcr  0
+    std   0, 160(1)
+    # save LR
+    mflr  0
+    std   0, 168(1)
+    # save LR as PC
+    std   0, 176(1)
+
+    # store RSP (pointing to context-data) in R6
+    mr  6, 1
+
+    # restore RSP (pointing to context-data) from R4
+    mr  1, 4
+
+    ld  2,  0(1)  # restore TOC
+    ld  14, 8(1)  # restore R14
+    ld  15, 16(1)  # restore R15
+    ld  16, 24(1)  # restore R16
+    ld  17, 32(1)  # restore R17
+    ld  18, 40(1)  # restore R18
+    ld  19, 48(1)  # restore R19
+    ld  20, 56(1)  # restore R20
+    ld  21, 64(1)  # restore R21
+    ld  22, 72(1)  # restore R22
+    ld  23, 80(1)  # restore R23
+    ld  24, 88(1)  # restore R24
+    ld  25, 96(1)  # restore R25
+    ld  26, 104(1)  # restore R26
+    ld  27, 112(1)  # restore R27
+    ld  28, 120(1)  # restore R28
+    ld  29, 128(1)  # restore R29
+    ld  30, 136(1)  # restore R30
+    ld  31, 144(1)  # restore R31
+    ld  3,  152(1)  # restore hidden
+
+    # restore CR
+    ld  0, 160(1)
+    mtcr  0
+    # restore LR
+    ld  0, 168(1)
+    mtlr  0
+
+    # load PC
+    ld  12, 176(1)
+    # restore CTR
+    mtctr  12
+
+    # adjust stack
+    addi  1, 1, 184
+
+    # zero in r3 indicates first jump to context-function
+    cmpdi 3, 0
+    beq use_entry_arg
+
+    # return transfer_t
+    std  6, 0(3)
+    std  5, 8(3)
+
+    # jump to context
+    bctr
+
+use_entry_arg:
+    # copy transfer_t into transfer_fn arg registers
+    mr  3, 6
+    mr  4, 5
+
+    # jump to context
+    bctr
--- /dev/null	2020-04-17 10:03:30 -0500
+++ ./libs/context/src/asm/make_ppc64_sysv_xcoff_xas.S	2020-04-17 09:52:57 -0500
@@ -0,0 +1,141 @@
+/*
+            Copyright Oliver Kowalke 2009.
+   Distributed under the Boost Software License, Version 1.0.
+      (See accompanying file LICENSE_1_0.txt or copy at
+          http://www.boost.org/LICENSE_1_0.txt)
+*/
+
+/*******************************************************
+ *                                                     *
+ *  -------------------------------------------------  *
+ *  |  0  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  *
+ *  -------------------------------------------------  *
+ *  |  0  |  4  |  8  |  12 |  16 |  20 |  24 |  28 |  *
+ *  -------------------------------------------------  *
+ *  |    TOC    |    R14    |    R15    |    R16    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  8  |  9  |  10 |  11 |  12 |  13 |  14 |  15 |  *
+ *  -------------------------------------------------  *
+ *  |  32 |  36 |  40 |  44 |  48 |  52 |  56 |  60 |  *
+ *  -------------------------------------------------  *
+ *  |    R17    |    R18    |     R19   |    R20    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  16 |  17 |  18 |  19 |  20 |  21 |  22 |  23 |  *
+ *  -------------------------------------------------  *
+ *  |  64 |  68 |  72 |  76 |  80 |  84 |  88 |  92 |  *
+ *  -------------------------------------------------  *
+ *  |    R21    |    R22    |    R23    |    R24    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  24 |  25 |  26 |  27 |  28 |  29 |  30 |  31 |  *
+ *  -------------------------------------------------  *
+ *  |  96 | 100 | 104 | 108 | 112 | 116 | 120 | 124 |  *
+ *  -------------------------------------------------  *
+ *  |    R25    |    R26    |    R27    |    R28    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  32 |  33 |  34 |  35 |  36 |  37 |  38 |  39 |  *
+ *  -------------------------------------------------  *
+ *  | 128 | 132 | 136 | 140 | 144 | 148 | 152 | 156 |  *
+ *  -------------------------------------------------  *
+ *  |    R29    |    R30    |    R31    |   hidden  |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  40 |  41 |  42 |  43 |  44 |  45 |  46 |  47 |  *
+ *  -------------------------------------------------  *
+ *  | 160 | 164 | 168 | 172 | 176 | 180 | 184 | 188 |  *
+ *  -------------------------------------------------  *
+ *  |     CR    |     LR    |     PC    | back-chain|  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  48 |  49 |  50 |  51 |  52 |  53 |  54 |  55 |  *
+ *  -------------------------------------------------  *
+ *  | 192 | 196 | 200 | 204 | 208 | 212 | 216 | 220 |  *
+ *  -------------------------------------------------  *
+ *  |  cr saved |  lr saved |  compiler |   linker  |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  56 |  57 |  58 |  59 |  60 |  61 |  62 |  63 |  *
+ *  -------------------------------------------------  *
+ *  | 224 | 228 | 232 | 236 | 240 | 244 | 248 | 252 |  *
+ *  -------------------------------------------------  *
+ *  | TOC saved |    FCTX   |    DATA   |           |  *
+ *  -------------------------------------------------  *
+ *                                                     *
+ *******************************************************/
+
+.machine "any"
+.file "make_ppc64_sysv_xcoff_aixas.S"
+.extern ._exit[PR]
+.csect .text[PR]
+.toc
+.csect .text[PR]
+.align 2
+.globl make_fcontext
+.globl .make_fcontext
+.csect make_fcontext[DS]
+make_fcontext:
+.llong .make_fcontext, TOC[tc0], 0
+.csect .text[PR]
+.make_fcontext:
+    # save return address into R6
+    mflr  6
+
+    # first arg of make_fcontext() == top address of context-stack
+    # shift address in R3 to lower 16 byte boundary
+    clrrdi  3, 3, 4
+
+    # reserve space for context-data on context-stack
+    # including 64 byte of linkage + parameter area (R1 % 16 == 0)
+    subi  3, 3, 248
+
+    # third arg of make_fcontext() == address of context-function descriptor
+    # save address of context-function entry point
+    ld   4, 0(5)
+    std  4, 176(3)
+    # save TOC of context-function
+    ld   4, 8(5)
+    std  4, 0(3)
+
+    # set back-chain to zero
+    li   0, 0
+    std  0, 184(3)
+
+    # zero in r3 indicates first jump to context-function
+    std  0, 152(3)
+
+    # load LR
+    mflr  0
+    # jump to label 1
+    bl  L..1
+L..1:
+    # load LR into R4
+    mflr  4
+    # compute abs address of label finish
+    addi  4, 4, finish - L..1
+    # restore LR
+    mtlr  0
+    # save address of finish as return-address for context-function
+    # will be entered after context-function returns
+    std  4, 168(3)
+
+    # restore return address from R6
+    mtlr  6
+
+    blr  # return pointer to context-data
+
+finish:
+    # save return address into R0
+    mflr  0
+    # save return address on stack, set up stack frame
+    std  0, 8(1)
+    # allocate stack space, R1 % 16 == 0
+    stdu  1, -32(1)
+
+    # exit code is zero
+    li  3, 0
+    # exit application
+    bl  ._exit[PR]
+    nop
--- /dev/null	2020-04-17 10:03:30 -0500
+++ ./libs/context/src/asm/ontop_ppc64_sysv_xcoff_xas.S	2020-04-17 09:53:11 -0500
@@ -0,0 +1,189 @@
+/*
+            Copyright Oliver Kowalke 2009.
+   Distributed under the Boost Software License, Version 1.0.
+      (See accompanying file LICENSE_1_0.txt or copy at
+          http://www.boost.org/LICENSE_1_0.txt)
+*/
+
+/*******************************************************
+ *                                                     *
+ *  -------------------------------------------------  *
+ *  |  0  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  *
+ *  -------------------------------------------------  *
+ *  |  0  |  4  |  8  |  12 |  16 |  20 |  24 |  28 |  *
+ *  -------------------------------------------------  *
+ *  |    TOC    |    R14    |    R15    |    R16    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  8  |  9  |  10 |  11 |  12 |  13 |  14 |  15 |  *
+ *  -------------------------------------------------  *
+ *  |  32 |  36 |  40 |  44 |  48 |  52 |  56 |  60 |  *
+ *  -------------------------------------------------  *
+ *  |    R17    |    R18    |     R19   |    R20    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  16 |  17 |  18 |  19 |  20 |  21 |  22 |  23 |  *
+ *  -------------------------------------------------  *
+ *  |  64 |  68 |  72 |  76 |  80 |  84 |  88 |  92 |  *
+ *  -------------------------------------------------  *
+ *  |    R21    |    R22    |    R23    |    R24    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  24 |  25 |  26 |  27 |  28 |  29 |  30 |  31 |  *
+ *  -------------------------------------------------  *
+ *  |  96 | 100 | 104 | 108 | 112 | 116 | 120 | 124 |  *
+ *  -------------------------------------------------  *
+ *  |    R25    |    R26    |    R27    |    R28    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  32 |  33 |  34 |  35 |  36 |  37 |  38 |  39 |  *
+ *  -------------------------------------------------  *
+ *  | 128 | 132 | 136 | 140 | 144 | 148 | 152 | 156 |  *
+ *  -------------------------------------------------  *
+ *  |    R29    |    R30    |    R31    |   hidden  |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  40 |  41 |  42 |  43 |  44 |  45 |  46 |  47 |  *
+ *  -------------------------------------------------  *
+ *  | 160 | 164 | 168 | 172 | 176 | 180 | 184 | 188 |  *
+ *  -------------------------------------------------  *
+ *  |     CR    |     LR    |     PC    | back-chain|  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  48 |  49 |  50 |  51 |  52 |  53 |  54 |  55 |  *
+ *  -------------------------------------------------  *
+ *  | 192 | 196 | 200 | 204 | 208 | 212 | 216 | 220 |  *
+ *  -------------------------------------------------  *
+ *  |  cr saved |  lr saved |  compiler |   linker  |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  56 |  57 |  58 |  59 |  60 |  61 |  62 |  63 |  *
+ *  -------------------------------------------------  *
+ *  | 224 | 228 | 232 | 236 | 240 | 244 | 248 | 252 |  *
+ *  -------------------------------------------------  *
+ *  | TOC saved |    FCTX   |    DATA   |           |  *
+ *  -------------------------------------------------  *
+ *                                                     *
+ *******************************************************/
+
+.machine "any"
+.file "ontop_ppc64_sysv_xcoff_aixas.S"
+.csect .text[PR]
+.toc
+.csect .text[PR]
+.align 2
+.globl ontop_fcontext
+.globl .ontop_fcontext
+.csect ontop_fcontext[DS]
+ontop_fcontext:
+.llong .ontop_fcontext, TOC[tc0], 0
+.csect .text[PR]
+.ontop_fcontext:
+    # reserve space on stack
+    subi  1, 1, 184
+
+    std  2,  0(1)  # save TOC
+    std  14, 8(1)  # save R14
+    std  15, 16(1)  # save R15
+    std  16, 24(1)  # save R16
+    std  17, 32(1)  # save R17
+    std  18, 40(1)  # save R18
+    std  19, 48(1)  # save R19
+    std  20, 56(1)  # save R20
+    std  21, 64(1)  # save R21
+    std  22, 72(1)  # save R22
+    std  23, 80(1)  # save R23
+    std  24, 88(1)  # save R24
+    std  25, 96(1)  # save R25
+    std  26, 104(1)  # save R26
+    std  27, 112(1)  # save R27
+    std  28, 120(1)  # save R28
+    std  29, 128(1)  # save R29
+    std  30, 136(1)  # save R30
+    std  31, 144(1)  # save R31
+    std  3,  152(1)  # save hidden
+
+    # save CR
+    mfcr  0
+    std   0, 160(1)
+    # save LR
+    mflr  0
+    std   0, 168(1)
+    # save LR as PC
+    std   0, 176(1)
+
+    # store RSP (pointing to context-data) in R7
+    mr  7, 1
+
+    # restore RSP (pointing to context-data) from R4
+    mr  1, 4
+
+    ld  14, 8(1)  # restore R14
+    ld  15, 16(1)  # restore R15
+    ld  16, 24(1)  # restore R16
+    ld  17, 32(1)  # restore R17
+    ld  18, 40(1)  # restore R18
+    ld  19, 48(1)  # restore R19
+    ld  20, 56(1)  # restore R20
+    ld  21, 64(1)  # restore R21
+    ld  22, 72(1)  # restore R22
+    ld  23, 80(1)  # restore R23
+    ld  24, 88(1)  # restore R24
+    ld  25, 96(1)  # restore R25
+    ld  26, 104(1)  # restore R26
+    ld  27, 112(1)  # restore R27
+    ld  28, 120(1)  # restore R28
+    ld  29, 128(1)  # restore R29
+    ld  30, 136(1)  # restore R30
+    ld  31, 144(1)  # restore R31
+    ld  3,  152(1)  # restore hidden
+
+    # restore CR
+    ld  0, 160(1)
+    mtcr  0
+
+    # copy transfer_t into ontop_fn arg registers
+    mr  4, 7
+    # arg pointer already in r5
+    # hidden arg already in r3
+
+    # restore CTR
+    ld   7, 0(6)
+    mtctr  7
+    # restore TOC
+    ld   2, 8(6)
+
+    # zero in r3 indicates first jump to context-function
+    cmpdi  3, 0
+    beq  use_entry_arg
+
+return_to_ctx:
+    # restore LR
+    ld  0, 168(1)
+    mtlr  0
+
+    # adjust stack
+    addi  1, 1, 184
+
+    # jump to context
+    bctr
+
+use_entry_arg:
+    # compute return-value struct address
+    # (passed has hidden arg to ontop_fn)
+    addi  3, 1, 8
+
+    # jump to context and update LR
+    bctrl
+
+    # restore CTR
+    ld   7, 176(1)
+    mtctr  7
+    # restore TOC
+    ld   2, 0(1)
+
+    # copy returned transfer_t into entry_fn arg registers
+    ld  3, 8(1)
+    ld  4, 16(1)
+
+    b  return_to_ctx
--- /dev/null	2020-06-17 17:46:47 -0500
+++ ./libs/context/src/asm/jump_ppc32_sysv_xcoff_xas.S	2020-06-17 14:07:12 -0500
@@ -0,0 +1,217 @@
+/*
+            Copyright Oliver Kowalke 2009.
+   Distributed under the Boost Software License, Version 1.0.
+      (See accompanying file LICENSE_1_0.txt or copy at
+          http://www.boost.org/LICENSE_1_0.txt)
+*/
+
+/*******************************************************
+ *                                                     *
+ *  -------------------------------------------------  *
+ *  |  0  |  4  |  8  |  12 |  16 |  20 |  24 |  28 |  *
+ *  -------------------------------------------------  *
+ *  |bchai|  CR | LR  |compl| link| TOC | R14 | R15 |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  32 |  36 |  40 |  44 |  48 |  52 |  56 |  60 |  *
+ *  -------------------------------------------------  *
+ *  | R16 | R17 | R18 | R19 | R20 | R21 | R22 | R23 |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  64 |  68 |  72 |  76 |  80 |  84 |  88 |  92 |  *
+ *  -------------------------------------------------  *
+ *  | R24 | R25 | R26 | R27 | R28 | R29 | R30 | R31 |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  96 | 100 | 104 | 108 | 112 | 116 | 120 | 124 |  *
+ *  -------------------------------------------------  *
+ *  |    F14    |    F15    |    F16    |    F17    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  | 128 | 132 | 136 | 140 | 144 | 148 | 152 | 156 |  *
+ *  -------------------------------------------------  *
+ *  |    F18    |    F19    |    F20    |    F21    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  | 160 | 164 | 168 | 172 | 176 | 180 | 184 | 188 |  *
+ *  -------------------------------------------------  *
+ *  |    F22    |    F23    |    F24    |    F25    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  | 192 | 196 | 200 | 204 | 208 | 212 | 216 | 220 |  *
+ *  -------------------------------------------------  *
+ *  |    F26    |    F27    |    F28    |    F29    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  | 224 | 228 | 232 | 236 | 240 | 244 | 248 | 252 |  *
+ *  -------------------------------------------------  *
+ *  |    F30    |    F31    |  PC |hiddn|  fpscr    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  | 256 | 260 | 264 | 268 | 272 | 276 | 280 | 284 |  *
+ *  -------------------------------------------------  *
+ *  |bchai|savLR|savLR|compl| link|svTOC| FCTX| DATA|  *
+ *  -------------------------------------------------  *
+ *                                                     *
+ *******************************************************/
+	.machine "any"
+	.file "jump_ppc32_sysv_xcoff_xas.S"
+	.csect .text[PR]
+	.toc
+	.csect .text[PR]
+	.globl jump_fcontext
+	.globl .jump_fcontext
+	.csect jump_fcontext[DS]
+jump_fcontext:
+	.long .jump_fcontext, TOC[tc0], 0
+	.csect .text[PR]
+.jump_fcontext:
+    # reserve space on stack
+    subi  1, 1, 256
+
+    # save CR
+    mfcr  0
+    stw   0, 4(1)
+    # save LR
+    mflr  0
+    stw   0, 8(1)
+    # save LR as PC
+    stw   0, 240(1)
+    # save TOC
+    stw   2, 20(1)
+
+    # Save registers R14 to R31.
+    stw   14, 24(1)
+    stw   15, 28(1)
+    stw   16, 32(1)
+    stw   17, 36(1)
+    stw   18, 40(1)
+    stw   19, 44(1)
+    stw   20, 48(1)
+    stw   21, 52(1)
+    stw   22, 56(1)
+    stw   23, 60(1)
+    stw   24, 64(1)
+    stw   25, 68(1)
+    stw   26, 72(1)
+    stw   27, 76(1)
+    stw   28, 80(1)
+    stw   29, 84(1)
+    stw   30, 88(1)
+    stw   31, 92(1)
+
+    # Save registers F14 to F31 in slots with 8-byte alignment.
+    # 4-byte alignment may stall the pipeline of some processors.
+    # Less than 4 may cause alignment traps.
+    stfd  14, 96(1)
+    stfd  15, 104(1)
+    stfd  16, 112(1)
+    stfd  17, 120(1)
+    stfd  18, 128(1)
+    stfd  19, 136(1)
+    stfd  20, 144(1)
+    stfd  21, 152(1)
+    stfd  22, 160(1)
+    stfd  23, 168(1)
+    stfd  24, 176(1)
+    stfd  25, 184(1)
+    stfd  26, 192(1)
+    stfd  27, 200(1)
+    stfd  28, 208(1)
+    stfd  29, 216(1)
+    stfd  30, 224(1)
+    stfd  31, 232(1)
+
+    # hidden pointer
+    stw   3, 244(1)
+
+    mffs  0  # load FPSCR
+    stfd  0, 248(1)  # save FPSCR
+
+
+    # store RSP (pointing to context-data) in R6
+    mr  6, 1
+
+    # restore RSP (pointing to context-data) from R4
+    mr  1, 4
+
+    # restore CR
+    lwz   0, 4(1)
+    mtcr  0
+    # restore LR
+    lwz   0, 8(1)
+    mtlr  0
+    # load PC
+    lwz   0, 240(1)
+    mtctr 0
+
+    # restore TOC
+    lwz   2, 20(1)
+
+    # restore R14 to R31
+    lwz  14, 24(1)
+    lwz  15, 28(1)
+    lwz  16, 32(1)
+    lwz  17, 36(1)
+    lwz  18, 40(1)
+    lwz  19, 44(1)
+    lwz  20, 48(1)
+    lwz  21, 52(1)
+    lwz  22, 56(1)
+    lwz  23, 60(1)
+    lwz  24, 64(1)
+    lwz  25, 68(1)
+    lwz  26, 72(1)
+    lwz  27, 76(1)
+    lwz  28, 80(1)
+    lwz  29, 84(1)
+    lwz  30, 88(1)
+    lwz  31, 92(1)
+
+    # restore F14 to F31
+    lfd  14, 96(1)
+    lfd  15, 104(1)
+    lfd  16, 112(1)
+    lfd  17, 120(1)
+    lfd  18, 128(1)
+    lfd  19, 136(1)
+    lfd  20, 144(1)
+    lfd  21, 152(1)
+    lfd  22, 160(1)
+    lfd  23, 168(1)
+    lfd  24, 176(1)
+    lfd  25, 184(1)
+    lfd  26, 192(1)
+    lfd  27, 200(1)
+    lfd  28, 208(1)
+    lfd  29, 216(1)
+    lfd  30, 224(1)
+    lfd  31, 232(1)
+
+    # hidden pointer
+    lwz   3, 244(1)
+
+    lfd  0,  248(1)  # load FPSCR
+    mtfsf  0xff, 0  # restore FPSCR
+
+    # adjust stack
+    addi  1, 1, 256
+
+    # zero in r3 indicates first jump to context-function
+    cmpdi 3, 0
+    beq use_entry_arg
+
+    # return transfer_t
+    stw  6, 0(3)
+    stw  5, 4(3)
+
+    # jump to context
+    bctr
+
+use_entry_arg:
+    # copy transfer_t into transfer_fn arg registers
+    mr  3, 6
+    mr  4, 5
+
+    # jump to context
+    bctr
--- /dev/null	2020-06-17 17:46:47 -0500
+++ ./libs/context/src/asm/make_ppc32_sysv_xcoff_xas.S	2020-06-17 14:35:22 -0500
@@ -0,0 +1,128 @@
+/*
+            Copyright Oliver Kowalke 2009.
+   Distributed under the Boost Software License, Version 1.0.
+      (See accompanying file LICENSE_1_0.txt or copy at
+          http://www.boost.org/LICENSE_1_0.txt)
+*/
+
+/*******************************************************
+ *                                                     *
+ *  -------------------------------------------------  *
+ *  |  0  |  4  |  8  |  12 |  16 |  20 |  24 |  28 |  *
+ *  -------------------------------------------------  *
+ *  |bchai|  CR | LR  |compl| link| TOC | R14 | R15 |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  32 |  36 |  40 |  44 |  48 |  52 |  56 |  60 |  *
+ *  -------------------------------------------------  *
+ *  | R16 | R17 | R18 | R19 | R20 | R21 | R22 | R23 |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  64 |  68 |  72 |  76 |  80 |  84 |  88 |  92 |  *
+ *  -------------------------------------------------  *
+ *  | R24 | R25 | R26 | R27 | R28 | R29 | R30 | R31 |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  96 | 100 | 104 | 108 | 112 | 116 | 120 | 124 |  *
+ *  -------------------------------------------------  *
+ *  |    F14    |    F15    |    F16    |    F17    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  | 128 | 132 | 136 | 140 | 144 | 148 | 152 | 156 |  *
+ *  -------------------------------------------------  *
+ *  |    F18    |    F19    |    F20    |    F21    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  | 160 | 164 | 168 | 172 | 176 | 180 | 184 | 188 |  *
+ *  -------------------------------------------------  *
+ *  |    F22    |    F23    |    F24    |    F25    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  | 192 | 196 | 200 | 204 | 208 | 212 | 216 | 220 |  *
+ *  -------------------------------------------------  *
+ *  |    F26    |    F27    |    F28    |    F29    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  | 224 | 228 | 232 | 236 | 240 | 244 | 248 | 252 |  *
+ *  -------------------------------------------------  *
+ *  |    F30    |    F31    |  PC |hiddn|  fpscr    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  | 256 | 260 | 264 | 268 | 272 | 276 | 280 | 284 |  *
+ *  -------------------------------------------------  *
+ *  |bchai|savLR|savLR|compl| link|svTOC| FCTX| DATA|  *
+ *  -------------------------------------------------  *
+ *                                                     *
+ *******************************************************/
+	.machine "any"
+	.file "make_ppc32_sysv_xcoff_xas.S"
+	.extern ._exit[PR]
+	.csect .text[PR]
+	.toc
+	.csect .text[PR]
+	.align 2
+	.globl make_fcontext
+	.globl .make_fcontext
+	.csect make_fcontext[DS]
+make_fcontext:
+    .long .make_fcontext, TOC[tc0], 0
+	.csect .text[PR]
+.make_fcontext:
+    # save return address into R6
+    mflr  6
+
+    # first arg of make_fcontext() == top address of context-function
+    # shift address in R3 to lower 16 byte boundary
+    clrrwi  3, 3, 4
+
+    # reserve space for context-data on context-stack
+    # including 32 byte of linkage + parameter area (R1 % 16 == 0)
+    subi  3, 3, 288
+
+    # third arg of make_fcontext() == address of context-function
+    lwz   4, 0(5)
+    stw  4, 240(3)
+    # save TOC of context-function
+    lwz   4, 4(5)
+    stw  4, 20(3)
+
+    # set back-chain to zero
+    li   0, 0
+    stw  0, 256(3)
+
+    # zero in r3 indicates first jump to context-function
+    std  0, 244(3)
+
+    # load LR
+    mflr  0
+    # jump to label 1
+    bl  L..1
+L..1:
+    # load LR into R4
+    mflr  4
+    # compute abs address of label finish
+    addi  4, 4, finish - L..1
+    # restore LR
+    mtlr  0
+    # save address of finish as return-address for context-function
+    # will be entered after context-function returns
+    stw  4, 8(3)
+
+    # restore return address from R6
+    mtlr  6
+
+    blr  # return pointer to context-data
+
+finish:
+    # save return address into R0
+    mflr  0
+    # save return address on stack, set up stack frame
+    stw  0, 4(1)
+    # allocate stack space, R1 % 16 == 0
+    stwu  1, -16(1)
+
+    # exit code is zero
+    li  3, 0
+    # exit application
+    bl  ._exit
+    nop
--- /dev/null	2020-06-17 17:46:47 -0500
+++ ./libs/context/src/asm/ontop_ppc32_sysv_xcoff_xas.S	2020-06-17 14:29:55 -0500
@@ -0,0 +1,240 @@
+/*
+            Copyright Oliver Kowalke 2009.
+   Distributed under the Boost Software License, Version 1.0.
+      (See accompanying file LICENSE_1_0.txt or copy at
+          http://www.boost.org/LICENSE_1_0.txt)
+*/
+
+/*******************************************************
+ *                                                     *
+ *  -------------------------------------------------  *
+ *  |  0  |  4  |  8  |  12 |  16 |  20 |  24 |  28 |  *
+ *  -------------------------------------------------  *
+ *  |bchai|  CR | LR  |compl| link| TOC | R14 | R15 |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  32 |  36 |  40 |  44 |  48 |  52 |  56 |  60 |  *
+ *  -------------------------------------------------  *
+ *  | R16 | R17 | R18 | R19 | R20 | R21 | R22 | R23 |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  64 |  68 |  72 |  76 |  80 |  84 |  88 |  92 |  *
+ *  -------------------------------------------------  *
+ *  | R24 | R25 | R26 | R27 | R28 | R29 | R30 | R31 |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  |  96 | 100 | 104 | 108 | 112 | 116 | 120 | 124 |  *
+ *  -------------------------------------------------  *
+ *  |    F14    |    F15    |    F16    |    F17    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  | 128 | 132 | 136 | 140 | 144 | 148 | 152 | 156 |  *
+ *  -------------------------------------------------  *
+ *  |    F18    |    F19    |    F20    |    F21    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  | 160 | 164 | 168 | 172 | 176 | 180 | 184 | 188 |  *
+ *  -------------------------------------------------  *
+ *  |    F22    |    F23    |    F24    |    F25    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  | 192 | 196 | 200 | 204 | 208 | 212 | 216 | 220 |  *
+ *  -------------------------------------------------  *
+ *  |    F26    |    F27    |    F28    |    F29    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  | 224 | 228 | 232 | 236 | 240 | 244 | 248 | 252 |  *
+ *  -------------------------------------------------  *
+ *  |    F30    |    F31    |  PC |hiddn|  fpscr    |  *
+ *  -------------------------------------------------  *
+ *  -------------------------------------------------  *
+ *  | 256 | 260 | 264 | 268 | 272 | 276 | 280 | 284 |  *
+ *  -------------------------------------------------  *
+ *  |bchai|savLR|savLR|compl| link|svTOC| FCTX| DATA|  *
+ *  -------------------------------------------------  *
+ *                                                     *
+ *******************************************************/
+	.machine "any"
+	.file "ontop_ppc32_sysv_xcoff_xas.S"
+	.csect .text[PR]
+	.toc
+	.csect .text[PR]
+	.align 2
+	.globl ontop_fcontext
+	.globl .ontop_fcontext
+	.csect ontop_fcontext[DS]
+ontop_fcontext:
+	.long .ontop_fcontext, TOC[tc0], 0
+	.csect .text[PR]
+.ontop_fcontext:
+    # reserve space on stack
+    subi  1, 1, 256
+
+    # save CR
+    mfcr  0
+    stw   0, 4(1)
+    # save LR
+    mflr  0
+    stw   0, 8(1)
+    # save LR as PC
+    stw   0, 240(1)
+    # save TOC
+    stw   2, 20(1)
+
+    # Save registers R14 to R31.
+    stw   14, 24(1)
+    stw   15, 28(1)
+    stw   16, 32(1)
+    stw   17, 36(1)
+    stw   18, 40(1)
+    stw   19, 44(1)
+    stw   20, 48(1)
+    stw   21, 52(1)
+    stw   22, 56(1)
+    stw   23, 60(1)
+    stw   24, 64(1)
+    stw   25, 68(1)
+    stw   26, 72(1)
+    stw   27, 76(1)
+    stw   28, 80(1)
+    stw   29, 84(1)
+    stw   30, 88(1)
+    stw   31, 92(1)
+
+    # Save registers F14 to F31 in slots with 8-byte alignment.
+    # 4-byte alignment may stall the pipeline of some processors.
+    # Less than 4 may cause alignment traps.
+    stfd  14, 96(1)
+    stfd  15, 104(1)
+    stfd  16, 112(1)
+    stfd  17, 120(1)
+    stfd  18, 128(1)
+    stfd  19, 136(1)
+    stfd  20, 144(1)
+    stfd  21, 152(1)
+    stfd  22, 160(1)
+    stfd  23, 168(1)
+    stfd  24, 176(1)
+    stfd  25, 184(1)
+    stfd  26, 192(1)
+    stfd  27, 200(1)
+    stfd  28, 208(1)
+    stfd  29, 216(1)
+    stfd  30, 224(1)
+    stfd  31, 232(1)
+
+    # hidden pointer
+    stw   3, 244(1)
+
+    mffs  0  # load FPSCR
+    stfd  0, 248(1)  # save FPSCR
+
+    # store RSP (pointing to context-data) in R7
+    mr  7, 1
+
+    # restore RSP (pointing to context-data) from R4
+    mr  1, 4
+
+    # restore CR
+    lwz   0, 4(1)
+    mtcr  0
+    # restore LR
+    lwz   0, 8(1)
+    mtlr  0
+    # load PC
+    lwz   0, 240(1)
+    mtctr 0
+
+    # restore TOC
+    lwz   2, 20(1)
+
+    # restore R14 to R31
+    lwz  14, 24(1)
+    lwz  15, 28(1)
+    lwz  16, 32(1)
+    lwz  17, 36(1)
+    lwz  18, 40(1)
+    lwz  19, 44(1)
+    lwz  20, 48(1)
+    lwz  21, 52(1)
+    lwz  22, 56(1)
+    lwz  23, 60(1)
+    lwz  24, 64(1)
+    lwz  25, 68(1)
+    lwz  26, 72(1)
+    lwz  27, 76(1)
+    lwz  28, 80(1)
+    lwz  29, 84(1)
+    lwz  30, 88(1)
+    lwz  31, 92(1)
+
+    # restore F14 to F31
+    lfd  14, 96(1)
+    lfd  15, 104(1)
+    lfd  16, 112(1)
+    lfd  17, 120(1)
+    lfd  18, 128(1)
+    lfd  19, 136(1)
+    lfd  20, 144(1)
+    lfd  21, 152(1)
+    lfd  22, 160(1)
+    lfd  23, 168(1)
+    lfd  24, 176(1)
+    lfd  25, 184(1)
+    lfd  26, 192(1)
+    lfd  27, 200(1)
+    lfd  28, 208(1)
+    lfd  29, 216(1)
+    lfd  30, 224(1)
+    lfd  31, 232(1)
+
+    lwz  3,  244(1)  # restore hidden
+
+    lfd  0,  248(1)  # load FPSCR
+    mtfsf  0xff, 0  # restore FPSCR
+
+    # copy transfer_t into ontop_fn arg registers
+    mr  4, 7
+    # arg pointer already in r5
+    # hidden arg already in r3
+
+    # restore CTR
+    lwz   7, 0(6)
+    mtctr  7
+    # restore TOC
+    lwz   2, 4(6)
+
+    # zero in r3 indicates first jump to context-function
+    cmpdi  3, 0
+    beq  use_entry_arg
+
+return_to_ctx:
+    # restore LR
+    lwz  0, 8(1)
+    mtlr  0
+
+    # adjust stack
+    addi  1, 1, 256
+
+    # jump to context
+    bctr
+
+use_entry_arg:
+    # compute return-value struct address
+    # (passed has hidden arg to ontop_fn)
+    addi  3, 1, 8
+
+    # jump to context and update LR
+    bctrl
+
+    # restore CTR
+    lwz   7, 4(1)
+    mtctr  7
+    # restore TOC
+    lwz   2, 20(1)
+
+    # copy returned transfer_t into entry_fn arg registers
+    lwz  3, 8(1)
+    lwz  4, 12(1)
+
+    b  return_to_ctx
