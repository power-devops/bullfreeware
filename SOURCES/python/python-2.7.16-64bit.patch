Index: Python-2.7.10/Lib/distutils/command/install.py
===================================================================
--- Python-2.7.10.orig/Lib/distutils/command/install.py	2013-05-12 05:32:42.000000000 +0200
+++ Python-2.7.10/Lib/distutils/command/install.py	2013-07-05 14:39:29.000000000 +0200
@@ -42,14 +42,14 @@
 INSTALL_SCHEMES = {
     'unix_prefix': {
         'purelib': '$base/lib/python$py_version_short/site-packages',
-        'platlib': '$platbase/lib/python$py_version_short/site-packages',
+        'platlib': '$platbase/lib64/python$py_version_short/site-packages',
         'headers': '$base/include/python$py_version_short/$dist_name',
         'scripts': '$base/bin',
         'data'   : '$base',
         },
     'unix_home': {
         'purelib': '$base/lib/python',
-        'platlib': '$base/lib/python',
+        'platlib': '$base/lib64/python',
         'headers': '$base/include/python/$dist_name',
         'scripts': '$base/bin',
         'data'   : '$base',
Index: Python-2.7.10/Lib/distutils/sysconfig.py
===================================================================
--- Python-2.7.10.orig/Lib/distutils/sysconfig.py	2013-05-12 05:32:42.000000000 +0200
+++ Python-2.7.10/Lib/distutils/sysconfig.py	2013-07-05 14:39:29.000000000 +0200
@@ -119,8 +119,12 @@
         prefix = plat_specific and EXEC_PREFIX or PREFIX
 
     if os.name == "posix":
+        if plat_specific:
+            lib = "lib64"
+        else:
+            lib = "lib"
         libpython = os.path.join(prefix,
-                                 "lib", "python" + get_python_version())
+                                 lib, "python" + get_python_version())
         if standard_lib:
             return libpython
         else:
Index: Python-2.7.10/Lib/site.py
===================================================================
--- Python-2.7.10.orig/Lib/site.py	2013-05-12 05:32:44.000000000 +0200
+++ Python-2.7.10/Lib/site.py	2013-07-05 14:39:29.000000000 +0200
@@ -288,12 +288,16 @@
         if sys.platform in ('os2emx', 'riscos'):
             sitepackages.append(os.path.join(prefix, "Lib", "site-packages"))
         elif os.sep == '/':
+            sitepackages.append(os.path.join(prefix, "lib64",
+                                        "python" + sys.version[:3],
+                                        "site-packages"))
             sitepackages.append(os.path.join(prefix, "lib",
                                         "python" + sys.version[:3],
                                         "site-packages"))
             sitepackages.append(os.path.join(prefix, "lib", "site-python"))
         else:
             sitepackages.append(prefix)
+            sitepackages.append(os.path.join(prefix, "lib64", "site-packages"))
             sitepackages.append(os.path.join(prefix, "lib", "site-packages"))
         if sys.platform == "darwin":
             # for framework builds *only* we add the standard Apple
Index: Python-2.7.10/Makefile.pre.in
===================================================================
--- Python-2.7.10.orig/Makefile.pre.in	2013-07-05 14:39:29.000000000 +0200
+++ Python-2.7.10/Makefile.pre.in	2013-07-05 14:39:29.000000000 +0200
@@ -101,12 +101,12 @@
 datarootdir=    @datarootdir@
 
 # Expanded directories
-BINDIR=		@bindir@
-LIBDIR=		@libdir@
+BINDIR=		$(exec_prefix)/bin
+LIBDIR=		$(exec_prefix)/lib64
 MANDIR=		@mandir@
 INCLUDEDIR=	@includedir@
 CONFINCLUDEDIR=	$(exec_prefix)/include
-SCRIPTDIR=	$(prefix)/lib
+SCRIPTDIR=	$(prefix)/lib64
 
 # Detailed destination directories
 BINLIBDEST=	$(LIBDIR)/python$(VERSION)
Index: Python-2.7.10/Modules/Setup.dist
===================================================================
--- Python-2.7.10.orig/Modules/Setup.dist	2013-07-05 14:39:29.000000000 +0200
+++ Python-2.7.10/Modules/Setup.dist	2013-07-05 14:39:29.000000000 +0200
@@ -418,7 +418,7 @@
 #DB=/usr/local/BerkeleyDB.4.0
 #DBLIBVER=4.0
 #DBINC=$(DB)/include
-#DBLIB=$(DB)/lib
+#DBLIB=$(DB)/lib64
 #_bsddb _bsddb.c -I$(DBINC) -L$(DBLIB) -ldb-$(DBLIBVER)
 
 # Historical Berkeley DB 1.85
Index: Python-2.7.10/Modules/getpath.c
===================================================================
--- Python-2.7.10.orig/Modules/getpath.c	2013-05-12 05:32:51.000000000 +0200
+++ Python-2.7.10/Modules/getpath.c	2013-07-05 14:39:29.000000000 +0200
@@ -129,7 +129,7 @@
 static char exec_prefix[MAXPATHLEN+1];
 static char progpath[MAXPATHLEN+1];
 static char *module_search_path = NULL;
-static char lib_python[] = "lib/python" VERSION;
+static char lib_python[] = "lib64/python" VERSION;
 
 static void
 reduce(char *dir)
@@ -543,7 +543,7 @@
     }
     else
         strncpy(zip_path, PREFIX, MAXPATHLEN);
-    joinpath(zip_path, "lib/python00.zip");
+    joinpath(zip_path, "lib64/python00.zip");
     bufsz = strlen(zip_path);   /* Replace "00" with version */
     zip_path[bufsz - 6] = VERSION[0];
     zip_path[bufsz - 5] = VERSION[2];
Index: Python-2.7.10/Lib/sysconfig.py
===================================================================
--- Python-2.7.10.orig/Lib/sysconfig.py	2013-07-05 14:39:28.000000000 +0200
+++ Python-2.7.10/Lib/sysconfig.py	2013-07-05 14:39:29.000000000 +0200
@@ -8,9 +8,9 @@
 _INSTALL_SCHEMES = {
     'posix_prefix': {
         'stdlib': '{base}/lib/python{py_version_short}',
-        'platstdlib': '{platbase}/lib/python{py_version_short}',
+        'platstdlib': '{platbase}/lib64/python{py_version_short}',
         'purelib': '{base}/lib/python{py_version_short}/site-packages',
-        'platlib': '{platbase}/lib/python{py_version_short}/site-packages',
+        'platlib': '{platbase}/lib64/python{py_version_short}/site-packages',
         'include': '{base}/include/python{py_version_short}',
         'platinclude': '{platbase}/include/python{py_version_short}',
         'scripts': '{base}/bin',
@@ -18,9 +18,9 @@
         },
     'posix_home': {
         'stdlib': '{base}/lib/python',
-        'platstdlib': '{base}/lib/python',
+        'platstdlib': '{base}/lib64/python',
         'purelib': '{base}/lib/python',
-        'platlib': '{base}/lib/python',
+        'platlib': '{base}/lib64/python',
         'include': '{base}/include/python',
         'platinclude': '{base}/include/python',
         'scripts': '{base}/bin',
@@ -66,9 +66,9 @@
         },
     'posix_user': {
         'stdlib': '{userbase}/lib/python{py_version_short}',
-        'platstdlib': '{userbase}/lib/python{py_version_short}',
+        'platstdlib': '{userbase}/lib64/python{py_version_short}',
         'purelib': '{userbase}/lib/python{py_version_short}/site-packages',
-        'platlib': '{userbase}/lib/python{py_version_short}/site-packages',
+        'platlib': '{userbase}/lib64/python{py_version_short}/site-packages',
         'include': '{userbase}/include/python{py_version_short}',
         'scripts': '{userbase}/bin',
         'data'   : '{userbase}',
Index: Python-2.7.10/Lib/distutils/command/build_ext.py
===================================================================
--- Python-2.7.10.orig/Lib/distutils/command/build_ext.py	2013-05-12 05:32:42.000000000 +0200
+++ Python-2.7.10/Lib/distutils/command/build_ext.py	2013-07-05 14:42:06.000000000 +0200
@@ -265,9 +265,13 @@
         # Finally add the user include and library directories if requested
         if self.user:
             user_include = os.path.join(USER_BASE, "include")
+            user_lib64 = os.path.join(USER_BASE, "lib64")
             user_lib = os.path.join(USER_BASE, "lib")
             if os.path.isdir(user_include):
                 self.include_dirs.append(user_include)
+            if os.path.isdir(user_lib64):
+                self.library_dirs.append(user_lib64)
+                self.rpath.append(user_lib64)
             if os.path.isdir(user_lib):
                 self.library_dirs.append(user_lib)
                 self.rpath.append(user_lib)
--- Python-2.7.10.orig/setup.py	2013-11-10 08:36:41 +0100
+++ Python-2.7.10/setup.py	2013-12-02 16:35:17 +0100
@@ -376,7 +376,7 @@
 
         if multiarch_path_component != '':
             add_dir_to_list(self.compiler.library_dirs,
-                            '/usr/lib/' + multiarch_path_component)
+                            '/usr/lib64/' + multiarch_path_component)
             add_dir_to_list(self.compiler.include_dirs,
                             '/usr/include/' + multiarch_path_component)
             return
@@ -397,7 +397,7 @@
                 with open(tmpfile) as fp:
                     multiarch_path_component = fp.readline().strip()
                 add_dir_to_list(self.compiler.library_dirs,
-                                '/usr/lib/' + multiarch_path_component)
+                                '/usr/lib64/' + multiarch_path_component)
                 add_dir_to_list(self.compiler.include_dirs,
                                 '/usr/include/' + multiarch_path_component)
         finally:
@@ -438,7 +438,7 @@
     def detect_modules(self):
         # Ensure that /usr/local is always used
         if not cross_compiling:
-            add_dir_to_list(self.compiler.library_dirs, '/usr/local/lib')
+            add_dir_to_list(self.compiler.library_dirs, '/usr/local/lib64')
             add_dir_to_list(self.compiler.include_dirs, '/usr/local/include')
         if cross_compiling:
             self.add_gcc_paths()
--- ./Lib/test/test_site.py.ORIGIN	2018-05-18 10:28:44 -0500
+++ ./Lib/test/test_site.py	2018-05-18 10:49:40 -0500
@@ -252,12 +252,15 @@
             self.assertEqual(dirs[0], wanted)
         elif os.sep == '/':
             # OS X, Linux, FreeBSD, etc
-            self.assertEqual(len(dirs), 2)
-            wanted = os.path.join('xoxo', 'lib', 'python' + sys.version[:3],
+            self.assertEqual(len(dirs), 3)
+            wanted = os.path.join('xoxo', 'lib64', 'python' + sys.version[:3],
                                   'site-packages')
             self.assertEqual(dirs[0], wanted)
-            wanted = os.path.join('xoxo', 'lib', 'site-python')
+            wanted = os.path.join('xoxo', 'lib', 'python' + sys.version[:3],
+                                  'site-packages')
             self.assertEqual(dirs[1], wanted)
+            wanted = os.path.join('xoxo', 'lib', 'site-python')
+            self.assertEqual(dirs[2], wanted)
         else:
             # other platforms
             self.assertEqual(len(dirs), 2)
