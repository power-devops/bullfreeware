--- ./erts/emulator/hipe/hipe_ppc_bifs.m4.origin	2017-01-11 17:30:19 +0100
+++ ./erts/emulator/hipe/hipe_ppc_bifs.m4	2017-01-13 09:40:27 +0100
@@ -31,17 +31,51 @@
 #  define CALL_BIF(F)	bl	CSYM(nbif_impl_##F)
 #endif'
 
+#ifdef _AIX
+	.toc
+	.csect .text[PR]
+	.align 2
+#else
 	.text
 	.p2align 2
+#endif
+
+/* $1: Branch instruction (beq-, ...)
+   $2: Label number
+   $3: Label number + way (1f, 1b, 2f, ...)
+   $4: function name
+ */
+define(BRANCH_TO_LOCAL_LABEL,`
+#ifdef _AIX
+	$1 L.$4_$2
+#else
+	$1 $3
+#endif
+')
+
+/* $1: Label number
+   $2: function name
+   $3: Comment
+ */
+define(LOCAL_LABEL,`
+#ifdef _AIX
+L.$2_$1:	$3
+#else
+$1:	$3
+#endif
+')
 
 define(TEST_GOT_MBUF,`LOAD r4, P_MBUF(P)	/* `TEST_GOT_MBUF' */
 	CMPI r4, 0
-	bne- 3f
-2:')
-define(HANDLE_GOT_MBUF,`
-3:	bl CSYM(nbif_$1_gc_after_bif)	/* `HANDLE_GOT_MBUF' */
-	b 2b')
+	BRANCH_TO_LOCAL_LABEL(bne-,3,3f,$1)
+	LOCAL_LABEL(2,$1,/* */)
+')
 
+define(HANDLE_GOT_MBUF,`
+	LOCAL_LABEL(3,$2,/* */)
+	bl CSYM(nbif_$1_gc_after_bif)	/* `HANDLE_GOT_MBUF' */
+	BRANCH_TO_LOCAL_LABEL(b,2,2b,$2)
+')
 
 /*
  * standard_bif_interface_1(nbif_name, cbif_name)
@@ -68,16 +101,16 @@
 	STORE	r4, P_ARG0(r3)		/* Store BIF__ARGS in def_arg_reg[] */
 	addi	r4, r3, P_ARG0
 	CALL_BIF($2)
-	TEST_GOT_MBUF
+	TEST_GOT_MBUF($1)
 
 	/* Restore registers. Check for exception. */
 	CMPI	r3, THE_NON_VALUE
 	RESTORE_CONTEXT_BIF
-	beq-	1f
+	BRANCH_TO_LOCAL_LABEL(beq-, 1, 1f, $1)
 	NBIF_RET(1)
-1:	/* workaround for bc:s small offset operand */
+	LOCAL_LABEL(1, $1, /* workaround for bc:s small offset operand */)
 	b	CSYM(nbif_1_simple_exception)
-	HANDLE_GOT_MBUF(1)
+	HANDLE_GOT_MBUF(1,$1)
 	SET_SIZE(ASYM($1))
 	TYPE_FUNCTION(ASYM($1))
 #endif')
@@ -99,16 +132,16 @@
 	STORE	r5, P_ARG1(r3)
 	addi	r4, r3, P_ARG0
 	CALL_BIF($2)
-	TEST_GOT_MBUF
+	TEST_GOT_MBUF($1)
 
 	/* Restore registers. Check for exception. */
 	CMPI	r3, THE_NON_VALUE
 	RESTORE_CONTEXT_BIF
-	beq-	1f
+	BRANCH_TO_LOCAL_LABEL(beq-,1,1f,$1)
 	NBIF_RET(2)
-1:	/* workaround for bc:s small offset operand */
+	LOCAL_LABEL(1,$1,/* workaround for bc:s small offset operand */)
 	b	CSYM(nbif_2_simple_exception)
-	HANDLE_GOT_MBUF(2)
+	HANDLE_GOT_MBUF(2,$1)
 	SET_SIZE(ASYM($1))
 	TYPE_FUNCTION(ASYM($1))
 #endif')
@@ -132,16 +165,16 @@
 	STORE	r6, P_ARG2(r3)
 	addi	r4, r3, P_ARG0
 	CALL_BIF($2)
-	TEST_GOT_MBUF
+	TEST_GOT_MBUF($1)
 
 	/* Restore registers. Check for exception. */
 	CMPI	r3, THE_NON_VALUE
 	RESTORE_CONTEXT_BIF
-	beq-	1f
+	BRANCH_TO_LOCAL_LABEL(beq-,1,1f,$1)
 	NBIF_RET(3)
-1:	/* workaround for bc:s small offset operand */
+	LOCAL_LABEL(1,$1,/* workaround for bc:s small offset operand */)
 	b	CSYM(nbif_3_simple_exception)
-	HANDLE_GOT_MBUF(3)
+	HANDLE_GOT_MBUF(3,$1)
 	SET_SIZE(ASYM($1))
 	TYPE_FUNCTION(ASYM($1))
 #endif')
@@ -167,16 +200,16 @@
 	STORE	r7, P_ARG3(r3)
 	addi	r4, r3, P_ARG0
 	CALL_BIF($2)
-	TEST_GOT_MBUF
+	TEST_GOT_MBUF($1)
 
 	/* Restore registers. Check for exception. */
 	CMPI	r3, THE_NON_VALUE
 	RESTORE_CONTEXT_BIF
-	beq-	1f
+	BRANCH_TO_LOCAL_LABEL(beq-,1,1f,$1)
 	NBIF_RET(4)
-1:	/* workaround for bc:s small offset operand */
+	LOCAL_LABEL(1,$1,/* workaround for bc:s small offset operand */)
 	b	CSYM(nbif_4_simple_exception)
-	HANDLE_GOT_MBUF(4)
+	HANDLE_GOT_MBUF(4,$1)
 	SET_SIZE(ASYM($1))
 	TYPE_FUNCTION(ASYM($1))
 #endif')
@@ -194,16 +227,16 @@
 	SAVE_CONTEXT_BIF
 	/* ignore empty BIF__ARGS */
 	CALL_BIF($2)
-	TEST_GOT_MBUF
+	TEST_GOT_MBUF($1)
 
 	/* Restore registers. Check for exception. */
 	CMPI	r3, THE_NON_VALUE
 	RESTORE_CONTEXT_BIF
-	beq-	1f
+	BRANCH_TO_LOCAL_LABEL(beq-,1,1f,$1)
 	NBIF_RET(0)
-1:	/* workaround for bc:s small offset operand */
+	LOCAL_LABEL(1,$1,/* workaround for bc:s small offset operand */)
 	b	CSYM(nbif_0_simple_exception)
-	HANDLE_GOT_MBUF(0)
+	HANDLE_GOT_MBUF(0,$1)
 	SET_SIZE(ASYM($1))
 	TYPE_FUNCTION(ASYM($1))
 #endif')
@@ -231,12 +264,12 @@
 	SAVE_CONTEXT_GC
 	/* ignore empty BIF__ARGS */
 	CALL_BIF($2)
-	TEST_GOT_MBUF
+	TEST_GOT_MBUF($1)
 
 	/* Restore registers. */
 	RESTORE_CONTEXT_GC
 	NBIF_RET(0)
-	HANDLE_GOT_MBUF(0)
+	HANDLE_GOT_MBUF(0,$1)
 	SET_SIZE(ASYM($1))
 	TYPE_FUNCTION(ASYM($1))
 #endif')
@@ -256,16 +289,16 @@
 	STORE	r4, P_ARG0(r3)		/* Store BIF__ARGS in def_arg_reg[] */
 	addi	r4, r3, P_ARG0
 	CALL_BIF($2)
-	TEST_GOT_MBUF
+	TEST_GOT_MBUF($1)
 
 	/* Restore registers. Check for exception. */
 	CMPI	r3, THE_NON_VALUE
 	RESTORE_CONTEXT_GC
-	beq-	1f
+	BRANCH_TO_LOCAL_LABEL(beq-,1,1f,$1)
 	NBIF_RET(1)
-1:	/* workaround for bc:s small offset operand */
+	LOCAL_LABEL(1,$1,/* workaround for bc:s small offset operand */)
 	b	CSYM(nbif_1_simple_exception)
-	HANDLE_GOT_MBUF(1)
+	HANDLE_GOT_MBUF(1,$1)
 	SET_SIZE(ASYM($1))
 	TYPE_FUNCTION(ASYM($1))
 #endif')
@@ -287,16 +320,16 @@
 	STORE	r5, P_ARG1(r3)
 	addi	r4, r3, P_ARG0
 	CALL_BIF($2)
-	TEST_GOT_MBUF
+	TEST_GOT_MBUF($1)
 
 	/* Restore registers. Check for exception. */
 	CMPI	r3, THE_NON_VALUE
 	RESTORE_CONTEXT_GC
-	beq-	1f
+	BRANCH_TO_LOCAL_LABEL(beq-,1,1f,$1)
 	NBIF_RET(2)
-1:	/* workaround for bc:s small offset operand */
+	LOCAL_LABEL(1,$1,/* workaround for bc:s small offset operand */)
 	b	CSYM(nbif_2_simple_exception)
-	HANDLE_GOT_MBUF(2)
+	HANDLE_GOT_MBUF(2,$1)
 	SET_SIZE(ASYM($1))
 	TYPE_FUNCTION(ASYM($1))
 #endif')
@@ -320,16 +353,16 @@
 	STORE	r6, P_ARG2(r3)
 	addi	r4, r3, P_ARG0
 	CALL_BIF($2)
-	TEST_GOT_MBUF
+	TEST_GOT_MBUF($1)
 
 	/* Restore registers. Check for exception. */
 	CMPI	r3, THE_NON_VALUE
 	RESTORE_CONTEXT_GC
-	beq-	1f
+	BRANCH_TO_LOCAL_LABEL(beq-,1,1f,$1)
 	NBIF_RET(3)
-1:	/* workaround for bc:s small offset operand */
+	LOCAL_LABEL(1,$1,/* workaround for bc:s small offset operand */)
 	b	CSYM(nbif_3_simple_exception)
-	HANDLE_GOT_MBUF(3)
+	HANDLE_GOT_MBUF(3,$1)
 	SET_SIZE(ASYM($1))
 	TYPE_FUNCTION(ASYM($1))
 #endif')
@@ -384,12 +417,12 @@
 	/* Save caller-save registers and call the C function. */
 	SAVE_CONTEXT_BIF
 	bl	CSYM($2)
-	TEST_GOT_MBUF
+	TEST_GOT_MBUF($1)
 
 	/* Restore registers. */
 	RESTORE_CONTEXT_BIF
 	NBIF_RET(0)
-	HANDLE_GOT_MBUF(0)
+	HANDLE_GOT_MBUF(0,$1)
 	SET_SIZE(ASYM($1))
 	TYPE_FUNCTION(ASYM($1))
 #endif')
@@ -407,12 +440,12 @@
 	/* Save caller-save registers and call the C function. */
 	SAVE_CONTEXT_BIF
 	bl	CSYM($2)
-	TEST_GOT_MBUF
+	TEST_GOT_MBUF($1)
 
 	/* Restore registers. */
 	RESTORE_CONTEXT_BIF
 	NBIF_RET(1)
-	HANDLE_GOT_MBUF(1)
+	HANDLE_GOT_MBUF(1,$1)
 	SET_SIZE(ASYM($1))
 	TYPE_FUNCTION(ASYM($1))
 #endif')
@@ -431,12 +464,12 @@
 	/* Save caller-save registers and call the C function. */
 	SAVE_CONTEXT_BIF
 	bl	CSYM($2)
-	TEST_GOT_MBUF
+	TEST_GOT_MBUF($1)
 
 	/* Restore registers. */
 	RESTORE_CONTEXT_BIF
 	NBIF_RET(2)
-	HANDLE_GOT_MBUF(2)
+	HANDLE_GOT_MBUF(2,$1)
 	SET_SIZE(ASYM($1))
 	TYPE_FUNCTION(ASYM($1))
 #endif')
@@ -456,12 +489,12 @@
 	/* Save caller-save registers and call the C function. */
 	SAVE_CONTEXT_BIF
 	bl	CSYM($2)
-	TEST_GOT_MBUF
+	TEST_GOT_MBUF($1)
 
 	/* Restore registers. */
 	RESTORE_CONTEXT_BIF
 	NBIF_RET(3)
-	HANDLE_GOT_MBUF(3)
+	HANDLE_GOT_MBUF(3,$1)
 	SET_SIZE(ASYM($1))
 	TYPE_FUNCTION(ASYM($1))
 #endif')
