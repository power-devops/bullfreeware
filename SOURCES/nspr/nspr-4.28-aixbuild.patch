--- ./nspr/configure.in.ORIGIN	2020-08-21 01:04:43 +0200
+++ ./nspr/configure.in	2020-09-30 17:18:49 +0200
@@ -1180,7 +1180,7 @@
     AC_DEFINE(XP_UNIX)
     AC_DEFINE(AIX)
     AC_DEFINE(SYSV)
-    DSO_LDOPTS='-brtl -bnortllib -bM:SRE -bnoentry -bexpall -blibpath:/usr/lib:/lib'
+    DSO_LDOPTS='-brtl -bM:SRE -bnoentry -blibpath:${prefix}/lib:/usr/lib:/lib'
     AC_CHECK_HEADER(sys/atomic_op.h, AC_DEFINE(AIX_HAVE_ATOMIC_OP_H))
     case "${target_os}" in
     aix3.2*)
@@ -1223,7 +1223,9 @@
         AIX_LINK_OPTS='-brtl -bnso -berok'
         ;;
     esac
-    CFLAGS="$CFLAGS -qro -qroconst"
+    if ! `echo "$CC" | grep -q gcc` ; then
+        CFLAGS="$CFLAGS -qro -qroconst"
+    fi
     AIX_WRAP='$(DIST)/lib/aixwrap.o'
     AIX_TMP='./_aix_tmp.o'
     if test -n "$USE_64"; then
--- ./nspr/configure.ORIG	2020-08-21 01:04:43 +0200
+++ ./nspr/configure	2020-09-30 17:47:57 +0200
@@ -5999,7 +5999,7 @@
 
     $as_echo "#define SYSV 1" >>confdefs.h
 
-    DSO_LDOPTS='-brtl -bnortllib -bM:SRE -bnoentry -bexpall -blibpath:/usr/lib:/lib'
+    DSO_LDOPTS='-brtl -bM:SRE -bnoentry -blibpath:${prefix}/lib:/usr/lib:/lib'
 
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking for grep that handles long lines and -e" >&5
 $as_echo_n "checking for grep that handles long lines and -e... " >&6; }
@@ -6325,7 +6325,9 @@
         AIX_LINK_OPTS='-brtl -bnso -berok'
         ;;
     esac
-    CFLAGS="$CFLAGS -qro -qroconst"
+    if ! `echo "$CC" | grep -q gcc` ; then
+        CFLAGS="$CFLAGS -qro -qroconst"
+    fi
     AIX_WRAP='$(DIST)/lib/aixwrap.o'
     AIX_TMP='./_aix_tmp.o'
     if test -n "$USE_64"; then
--- ./nspr/pr/src/pthreads/ptthread.c.ORIGIN	2020-08-21 01:04:43 +0200
+++ ./nspr/pr/src/pthreads/ptthread.c	2020-09-16 11:45:46 +0200
@@ -1033,6 +1033,8 @@
 static void _register_PR_Fini() {
     atexit(_PR_Fini);
 }
+#elif defined(AIX)
+extern void _PR_Fini(void) __attribute__ ((destructor));
 #else
 static void _PR_Fini(void) __attribute__ ((destructor));
 #endif
--- ./nspr/pr/tests/Makefile.in.ORIGIN	2020-08-21 01:04:43 +0200
+++ ./nspr/pr/tests/Makefile.in	2020-09-16 11:32:22 +0200
@@ -248,11 +248,19 @@
 
 # AIX
 ifeq ($(OS_ARCH),AIX)
+    ifdef NS_USE_GCC
+    LDOPTS += -Wl,-blibpath:$(ABSOLUTE_LIB_DIR):/usr/lib:/lib
+    ifneq ($(OS_ARCH)$(OS_RELEASE),AIX4.1)
+        LDOPTS += -Wl,-brtl
+        EXTRA_LIBS = -ldl
+    endif
+    else
     LDOPTS += -blibpath:$(ABSOLUTE_LIB_DIR):/usr/lib:/lib
     ifneq ($(OS_ARCH)$(OS_RELEASE),AIX4.1)
         LDOPTS += -brtl
         EXTRA_LIBS = -ldl
     endif
+    endif
 endif
 
 # Solaris
--- ./nspr/pr/src/Makefile.in.ORIGIN	2020-08-21 01:04:43 +0200
+++ ./nspr/pr/src/Makefile.in	2020-09-16 11:53:18 +0200
@@ -80,6 +80,12 @@
 OS_LIBS		+= -lpthreads -lsvld -lC_r -lC -lc_r -lm /usr/lib/libc.a
 else
 OS_LIBS		+= -lpthreads -ldl -lC_r -lC -lc_r -lm /usr/lib/libc.a
+ifdef NS_USE_GCC
+ifndef USE_64
+# On AIX, GCC/32 bits will require 64 bit __udivdi3 __umoddi3 __divdi3 __moddi3
+OS_LIBS		+= -lgcc_s
+endif
+endif
 endif
 endif
 endif
--- ./nspr/pr/tests/dll/Makefile.in.ORIGIN	2020-08-21 01:04:43 +0200
+++ ./nspr/pr/tests/dll/Makefile.in	2020-09-16 11:53:18 +0200
@@ -58,6 +58,11 @@
 DSO_LDOPTS = -bundle
 endif
 
+ifeq ($(OS_ARCH),AIX)
+# The ld command needs this if CC is GCC
+LDFLAGS         = -lc
+endif
+
 include $(topsrcdir)/config/rules.mk
 
 ifeq ($(OS_TARGET), WIN16)
--- ./nspr/config/rules.mk.ORIG	2020-08-21 01:04:43 +0200
+++ ./nspr/config/rules.mk	2020-09-18 10:41:59 +0200
@@ -280,6 +280,15 @@
 	$(STRIP) $@
 endif
 
+ifeq ($(OS_ARCH), AIX)
+# Without the p*vrsion.o modules in libnspr4.a/libplc4.a tests will not build
+$(LIBRARY): $(OBJS)
+	@$(MAKE_OBJDIR)
+	rm -f $@
+	$(AR) $(AR_FLAGS) $(OBJS) $(AR_EXTRA_ARGS)
+	$(RANLIB) $@
+else    # AIX
+
 # Same as OBJS, but without any file that matches p*vrsion.o, since these
 # collide for static libraries, and are not useful for that case anyway.
 STATICLIB_OBJS = $(filter-out $(OBJDIR)/p%vrsion.$(OBJ_SUFFIX),$(OBJS))
@@ -288,6 +297,7 @@
 	rm -f $@
 	$(AR) $(AR_FLAGS) $(STATICLIB_OBJS) $(AR_EXTRA_ARGS)
 	$(RANLIB) $@
+endif   # AIX
 
 ifeq ($(OS_TARGET), OS2)
 $(IMPORT_LIBRARY): $(MAPFILE)
