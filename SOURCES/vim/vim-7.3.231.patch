To: vim_dev@googlegroups.com
Subject: Patch 7.3.231
Fcc: outbox
From: Bram Moolenaar <Bram@moolenaar.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
------------

Note: this is a weird patch, it redoes patches from 7.3.202 and 7.3.203
that failed when applied as a patch, but the mercurial repository
already had this, thus won't change anything there.


Patch 7.3.231
Problem:    Runtime file patches failed.
Solution:   Redo the patches made against the patched files instead of the
            files in the mercurial repository.
Files:      runtime/doc/indent.txt, runtime/doc/os_win32.txt


*** ../vim-7.3.230/runtime/doc/indent.txt	2011-05-25 15:16:06.000000000 +0200
--- runtime/doc/indent.txt	2011-05-31 22:23:39.000000000 +0200
***************
*** 356,363 ****
  		      BaseClass(3)	    BaseClass(3)
  		  {}			    {}
  <
! 	+N    Indent a continuation line (a line that spills onto the next) N
! 	      additional characters.  (default 'shiftwidth').
  
  		cino=			  cino=+10 >
  		  a = b + 9 *		    a = b + 9 *
--- 357,368 ----
  		      BaseClass(3)	    BaseClass(3)
  		  {}			    {}
  <
! 							*cino-+*
! 	+N    Indent a continuation line (a line that spills onto the next)
!               inside a function N additional characters.  (default
!               'shiftwidth').
!               Outside of a function, when the previous line ended in a
!               backslash, the 2 * N is used.
  
  		cino=			  cino=+10 >
  		  a = b + 9 *		    a = b + 9 *
***************
*** 509,522 ****
--- 514,532 ----
  		    }
  		}
  <
+ 								*cino-)*
  	)N    Vim searches for unclosed parentheses at most N lines away.
  	      This limits the time needed to search for parentheses.  (default
  	      20 lines).
  
+ 								*cino-star*
  	*N    Vim searches for unclosed comments at most N lines away.  This
  	      limits the time needed to search for the start of a comment.
+ 	      If your /* */ comments stop indenting afer N lines this is the
+ 	      value you will want to change.
  	      (default 70 lines).
  
+ 								*cino-#*
  	#N    When N is non-zero recognize shell/Perl comments, starting with
  	      '#'.  Default N is zero: don't recognizes '#' comments.  Note
  	      that lines starting with # will still be seen as preprocessor
*** ../vim-7.3.230/runtime/doc/os_win32.txt	2010-08-15 21:57:16.000000000 +0200
--- runtime/doc/os_win32.txt	2011-05-28 18:17:58.000000000 +0200
***************
*** 313,318 ****
--- 313,349 ----
     with :!start do not get passed Vim's open file handles, which means they do
     not have to be closed before Vim.
     To avoid this special treatment, use ":! start".
+    There are two optional arguments (see the next Q):
+        /min  the window will be minimized.
+        /b"   no console window will be opened
+    You can only one of these flags at a time.  A second second one will be
+    treated as the start of the command.
+ 
+ Q. How do I avoid getting a window for programs that I run asynchronously?
+ A. You have two possible solutions depending on what exactly do you want:
+    1) You may use the /min flag in order to run program in a minimized state
+       with no other changes. It will work equally for console and GUI
+       applications.
+    2) You can use the /b flag to run console applications without creating a
+       console window for them (GUI applications are not affected). But you
+       should use this flag only if the application you run doesn't require any
+       input.  Otherwise it will get an EOF error because its input stream
+       (stdin) would be redirected to \\.\NUL (stdoud and stderr too).
+ 
+    Example for a console application, run Exuberant ctags: >
+         :!start /min ctags -R .
+ <  When it has finished you should see file named "tags" in your current
+    directory.  You should notice the window title blinking on your taskbar.
+    This is more noticable for commands that take longer.
+    Now delete the "tags" file and run this command: >
+         :!start /b ctags -R .
+ <  You should have the same "tags" file, but this time there will be no
+    blinking on the taskbar.
+    Example for a GUI application: >
+         :!start /min notepad
+         :!start /b notepad
+ <  The first command runs notepad minimized and the second one runs it
+    normally.
  
  Q. I'm using Win32s, and when I try to run an external command like "make",
     Vim doesn't wait for it to finish!  Help!
*** ../vim-7.3.230/src/version.c	2011-06-20 05:02:53.000000000 +0200
--- src/version.c	2011-06-26 03:14:03.000000000 +0200
***************
*** 711,712 ****
--- 711,714 ----
  {   /* Add new patch number below this line */
+ /**/
+     231,
  /**/

-- 
hundred-and-one symptoms of being an internet addict:
222. You send more than 20 personal e-mails a day.

 /// Bram Moolenaar -- Bram@Moolenaar.net -- http://www.Moolenaar.net   \\\
///        sponsor Vim, vote for features -- http://www.Vim.org/sponsor/ \\\
\\\  an exciting new programming language -- http://www.Zimbu.org        ///
 \\\            help me help AIDS victims -- http://ICCF-Holland.org    ///
