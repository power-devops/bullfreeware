To: vim-dev@vim.org
Subject: Patch 7.3.010
Fcc: outbox
From: Bram Moolenaar <Bram@moolenaar.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
------------

Patch 7.3.010
Problem:    Mac GUI: Missing break statements.
Solution:   Add the break statements. (Dominique Pelle)
Files:	    src/gui_mac.c


*** ../vim-7.3.009/src/gui_mac.c	2010-08-15 21:57:28.000000000 +0200
--- src/gui_mac.c	2010-09-21 17:33:13.000000000 +0200
***************
*** 1480,1486 ****
   *
   *  Returns the index inside the menu wher
   */
!     short /* Shoulde we return MenuItemIndex? */
  gui_mac_get_menu_item_index(vimmenu_T *pMenu)
  {
      short	index;
--- 1480,1486 ----
   *
   *  Returns the index inside the menu wher
   */
!     short /* Should we return MenuItemIndex? */
  gui_mac_get_menu_item_index(vimmenu_T *pMenu)
  {
      short	index;
***************
*** 1823,1829 ****
  	p.h += gui.scrollbar_width;
      if (gui.which_scrollbars[SBAR_RIGHT])
  	p.h += gui.scrollbar_width;
!     /* ideal height is as heigh as we can get */
      p.v = 15 * 1024;
  
      thePart = IsWindowInStandardState(whichWindow, &p, &r)
--- 1823,1829 ----
  	p.h += gui.scrollbar_width;
      if (gui.which_scrollbars[SBAR_RIGHT])
  	p.h += gui.scrollbar_width;
!     /* ideal height is as high as we can get */
      p.v = 15 * 1024;
  
      thePart = IsWindowInStandardState(whichWindow, &p, &r)
***************
*** 4481,4487 ****
  	 * event arrives.  No need to check for input_buf_full because we are
  	 * returning as soon as it contains a single char.
  	 */
! 	/* TODO: reduce wtime accordinly???  */
  	if (wtime > -1)
  	    sleeppyTick = 60 * wtime / 1000;
  	else
--- 4481,4487 ----
  	 * event arrives.  No need to check for input_buf_full because we are
  	 * returning as soon as it contains a single char.
  	 */
! 	/* TODO: reduce wtime accordingly???  */
  	if (wtime > -1)
  	    sleeppyTick = 60 * wtime / 1000;
  	else
***************
*** 5723,5735 ****
      iconDITL = GetResource('DITL', 131);
      switch (type)
      {
! 	case VIM_GENERIC:  useIcon = kNoteIcon;
! 	case VIM_ERROR:    useIcon = kStopIcon;
! 	case VIM_WARNING:  useIcon = kCautionIcon;
! 	case VIM_INFO:     useIcon = kNoteIcon;
! 	case VIM_QUESTION: useIcon = kNoteIcon;
! 	default:      useIcon = kStopIcon;
!     };
      AppendDITL(theDialog, iconDITL, overlayDITL);
      ReleaseResource(iconDITL);
      GetDialogItem(theDialog, iconItm.idx, &itemType, &itemHandle, &box);
--- 5723,5735 ----
      iconDITL = GetResource('DITL', 131);
      switch (type)
      {
! 	case VIM_GENERIC:
! 	case VIM_INFO:
! 	case VIM_QUESTION: useIcon = kNoteIcon; break;
! 	case VIM_WARNING:  useIcon = kCautionIcon; break;
! 	case VIM_ERROR:    useIcon = kStopIcon; break;
! 	default:           useIcon = kStopIcon;
!     }
      AppendDITL(theDialog, iconDITL, overlayDITL);
      ReleaseResource(iconDITL);
      GetDialogItem(theDialog, iconItm.idx, &itemType, &itemHandle, &box);
***************
*** 5892,5898 ****
  
      return itemHit;
  /*
!  * Usefull thing which could be used
   * SetDialogTimeout(): Auto click a button after timeout
   * SetDialogTracksCursor() : Get the I-beam cursor over input box
   * MoveDialogItem():	    Probably better than SetDialogItem
--- 5892,5898 ----
  
      return itemHit;
  /*
!  * Useful thing which could be used
   * SetDialogTimeout(): Auto click a button after timeout
   * SetDialogTracksCursor() : Get the I-beam cursor over input box
   * MoveDialogItem():	    Probably better than SetDialogItem
***************
*** 6100,6106 ****
  #endif
  
  /*
!  * Transfered from os_mac.c for MacOS X using os_unix.c prep work
   */
  
      int
--- 6100,6106 ----
  #endif
  
  /*
!  * Transferred from os_mac.c for MacOS X using os_unix.c prep work
   */
  
      int
***************
*** 6543,6549 ****
  static ControlRef dataBrowser = NULL;
  
  // when the tabline is hidden, vim doesn't call update_tabline(). When
! // the tabline is shown again, show_tabline() is called before upate_tabline(),
  // and because of this, the tab labels and vims internal tabs are out of sync
  // for a very short time. to prevent inconsistent state, we store the labels
  // of the tabs, not pointers to the tabs (which are invalid for a short time).
--- 6543,6549 ----
  static ControlRef dataBrowser = NULL;
  
  // when the tabline is hidden, vim doesn't call update_tabline(). When
! // the tabline is shown again, show_tabline() is called before update_tabline(),
  // and because of this, the tab labels and vims internal tabs are out of sync
  // for a very short time. to prevent inconsistent state, we store the labels
  // of the tabs, not pointers to the tabs (which are invalid for a short time).
*** ../vim-7.3.009/src/version.c	2010-09-21 17:29:19.000000000 +0200
--- src/version.c	2010-09-21 17:33:22.000000000 +0200
***************
*** 716,717 ****
--- 716,719 ----
  {   /* Add new patch number below this line */
+ /**/
+     10,
  /**/

-- 
hundred-and-one symptoms of being an internet addict:
182. You may not know what is happening in the world, but you know
     every bit of net-gossip there is.

 /// Bram Moolenaar -- Bram@Moolenaar.net -- http://www.Moolenaar.net   \\\
///        sponsor Vim, vote for features -- http://www.Vim.org/sponsor/ \\\
\\\        download, build and distribute -- http://www.A-A-P.org        ///
 \\\            help me help AIDS victims -- http://ICCF-Holland.org    ///
