--- ./src/third_party/s2/base/integral_types.h.ORIGIN	2019-05-22 14:55:57 -0500
+++ ./src/third_party/s2/base/integral_types.h	2019-05-22 14:57:35 -0500
@@ -25,7 +25,9 @@
 #ifdef COMPILER_MSVC
 typedef __int64             int64;
 #else
+#ifndef _AIX
 typedef long long           int64;
+#endif
 #endif /* COMPILER_MSVC */
 
 // NOTE: unsigned types are DANGEROUS in loops and other arithmetical
--- ./src/third_party/s2/base/integral_types.h.ORIGIN	2019-05-22 18:22:27 -0500
+++ ./src/third_party/s2/base/integral_types.h	2019-05-22 18:27:46 -0500
@@ -10,6 +10,8 @@
 #ifndef BASE_INT_TYPES_H_
 #define BASE_INT_TYPES_H_
 
+#include <sys/stdint.h>
+
 // These typedefs are also defined in base/google.swig. In the
 // SWIG environment, we use those definitions and avoid duplicate
 // definitions here with an ifdef. The definitions should be the
@@ -102,8 +104,8 @@
 static const  int16 kint16max  = (( int16) 0x7FFF);
 static const  int32 kint32min  = (( int32) 0x80000000);
 static const  int32 kint32max  = (( int32) 0x7FFFFFFF);
-static const  int64 kint64min  = (( int64) GG_LONGLONG(0x8000000000000000));
-static const  int64 kint64max  = (( int64) GG_LONGLONG(0x7FFFFFFFFFFFFFFF));
+static const  int64_t kint64min  = (( int64_t) GG_LONGLONG(0x8000000000000000));
+static const  int64_t kint64max  = (( int64_t) GG_LONGLONG(0x7FFFFFFFFFFFFFFF));
 
 
 #endif  // BASE_INT_TYPES_H_
