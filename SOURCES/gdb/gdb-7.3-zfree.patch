Index: gdb-7.3/sim/ppc/events.c
===================================================================
--- gdb-7.3.orig/sim/ppc/events.c	2011-02-14 06:14:27.000000000 +0100
+++ gdb-7.3/sim/ppc/events.c	2011-08-05 09:19:40.000000000 +0200
@@ -114,7 +114,7 @@
     while (event != NULL) {
       event_entry *dead = event;
       event = event->next;
-      free(dead);
+      zfree(dead);
     }
     queue->held = NULL;
     queue->held_end = &queue->held;
@@ -128,7 +128,7 @@
   while (event != NULL) {
     event_entry *dead = event;
     event = event->next;
-    free(dead);
+    zfree(dead);
   }
   queue->queue = NULL;
     
@@ -304,7 +304,7 @@
 			   (long)current->time_of_event,
 			   (long)current->handler,
 			   (long)current->data));
-      free(current);
+      zfree(current);
       update_time_from_event(events);
     }
     else {
@@ -392,7 +392,7 @@
 			 (long)to_do->time_of_event,
 			 (long)handler,
 			 (long)data));
-    free(to_do);
+    zfree(to_do);
     /* Always re-compute the time to the next event so that HANDLER()
        can safely insert new events into the queue. */
     update_time_from_event(events);
Index: gdb-7.3/sim/ppc/sim_callbacks.h
===================================================================
--- gdb-7.3.orig/sim/ppc/sim_callbacks.h	2011-02-14 06:14:28.000000000 +0100
+++ gdb-7.3/sim/ppc/sim_callbacks.h	2011-08-05 09:20:23.000000000 +0200
@@ -114,4 +114,6 @@
 
 #define ZALLOC(TYPE) (TYPE*)zalloc(sizeof (TYPE))
 
+void zfree(void*);
+
 #endif
Index: gdb-7.3/sim/ppc/sim_calls.c
===================================================================
--- gdb-7.3.orig/sim/ppc/sim_calls.c	2011-02-14 06:14:28.000000000 +0100
+++ gdb-7.3/sim/ppc/sim_calls.c	2011-08-05 11:42:27.000000000 +0200
@@ -26,7 +26,7 @@
 #include "psim.h"
 #include "options.h"
 
-#undef printf_filtered /* blow away the mapping */
+/* #undef printf_filtered *//* blow away the mapping */
 
 #ifdef HAVE_STDLIB_H
 #include <stdlib.h>
@@ -390,3 +390,9 @@
   memset(memory, 0, size);
   return memory;
 }
+
+void zfree(void *data)
+{
+  free(data);
+}
+
